/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotel;

import com.github.sarxos.webcam.Webcam;
import com.googlecode.javacv.CanvasFrame;
import com.googlecode.javacv.cpp.opencv_core.IplImage;
import static com.googlecode.javacv.cpp.opencv_highgui.cvLoadImage;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
 

/**
 *
 * @author Rafsan
 */
public class webcam1 extends javax.swing.JFrame {
    Webcam webcam;
    /**
     * Creates new form webcam1
     */
    public webcam1() throws SQLException, ClassNotFoundException {
        initComponents();
        addTableHeader();
        webcam = Webcam.getDefault();
        webcam.setViewSize(new Dimension(176,144));
        webcam.open();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        lebl = new javax.swing.JLabel();
        takePicture = new javax.swing.JButton();
        name = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        webcam_capture = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        ready = new javax.swing.JButton();
        jImageShower = new javax.swing.JButton();
        jLabelImage = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(lebl, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 110, 110));

        takePicture.setText("Take Picture");
        takePicture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                takePictureActionPerformed(evt);
            }
        });
        getContentPane().add(takePicture, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 50, 137, 36));
        getContentPane().add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 170, 83, 36));

        jLabel1.setText("Enter IMG name");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 170, 90, 36));

        webcam_capture.setText("Open Webcam");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, ready, org.jdesktop.beansbinding.ELProperty.create("${action.enabled}"), webcam_capture, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        webcam_capture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                webcam_captureActionPerformed(evt);
            }
        });
        getContentPane().add(webcam_capture, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 137, 75));

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        getContentPane().add(exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, -1, -1));

        ready.setText("Ready");
        ready.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                readyAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        ready.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readyActionPerformed(evt);
            }
        });
        getContentPane().add(ready, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 120, 140, -1));

        jImageShower.setText("Browse");
        jImageShower.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jImageShowerActionPerformed(evt);
            }
        });
        getContentPane().add(jImageShower, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 350, -1, -1));
        getContentPane().add(jLabelImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 290, 170, 140));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Image"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 10, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon("D:\\EDU\\Programming\\Hotel\\50-Beautiful-and-Minimalist-Presentation-Backgrounds-05.jpg")); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 520));

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void takePictureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_takePictureActionPerformed
        
                    String name_image=name.getText();
                    try{
                    BufferedImage img=webcam.getImage();
                    if(img!=null){
                    
                    //cvSaveImage("Image\\"+name_image+".jpg",img);
                    File output = new File("Image//"+name_image+".jpg");
                    ImageIO.write(img, "JPG", output);
                    
                    
                }
            }catch(Exception e){
                e.printStackTrace();
                
            }       
                    BufferedImage img1= null;
                    File input = new File("Image//"+name_image+".jpg");
        try {
            img1 = ImageIO.read(input);
        } catch (IOException ex) {
            Logger.getLogger(webcam1.class.getName()).log(Level.SEVERE, null, ex);
        }
                    IplImage image = cvLoadImage("D://EDU//Programming//Java Database Project//Hotel Management(postgresql)//Image//"+name_image+".jpg");
                    final CanvasFrame canvas = new CanvasFrame("Loba");
                    canvas.showImage(img1);
    }//GEN-LAST:event_takePictureActionPerformed
 
    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void readyAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_readyAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_readyAncestorAdded

    private void readyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readyActionPerformed
        BufferedImage img1= null;
                    File input = new File("Image//"+name.getText()+".jpg");
        try {
            img1 = ImageIO.read(input);
        } catch (IOException ex) {
            Logger.getLogger(webcam1.class.getName()).log(Level.SEVERE, null, ex);
        }
//        imageLabel.setIcon(imageicon);
        String name1=name.getText();
        //Checking if one or more field is empty
        if (name1.isEmpty()) {
            JOptionPane.showMessageDialog(null, "One Or More Fields Are Empty");
        } else {
//            JOptionPane.showMessageDialog(null, "All Fields are filled");
            //Adding entered data to jtable
 
            model.addRow(new Object[]{name1, name.getText()+".jpg"});
            jTable1.setModel(model);
            jTable1.setRowHeight(50);
            jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.getColumnModel().getColumn(1).setCellRenderer(new ImageRender());
            JOptionPane.showMessageDialog(null, "Data Inserted");
            //clear fields after inserting the data
        }
    }//GEN-LAST:event_readyActionPerformed
    private class ImageRender extends DefaultTableCellRenderer {
        
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value,
                          boolean isSelected, boolean hasFocus, int row, int column) {
            column = model.getColumnCount()-1;
            row = model.getRowCount()-1;
            value = jTable1.getValueAt(row, column);
            String photoname = value.toString();
            ImageIcon imageicon = new ImageIcon(new ImageIcon("Image//"+photoname).getImage().getScaledInstance(40, 40, Image.SCALE_DEFAULT));
            return new JLabel(imageicon);
        }
    }
    
    DefaultTableModel model;
    String name1 = "";
    String gender = "";
    String programmingLanguage = "";
    String Subject = "";
    String selectedImagePath = "";
//    byte imageJtable = new Byte(1024);
 
//Adding table headers
    public void addTableHeader() {
        model = (DefaultTableModel) jTable1.getModel();
        Object[] newIdentifiers = new Object[]{"Name", "Image"};
        model.setColumnIdentifiers(newIdentifiers);
        jTable1.setFillsViewportHeight(true);
 
    }
    class CellRenderer implements TableCellRenderer {
 
        @Override
        public Component getTableCellRendererComponent(JTable table,
                Object value,
                boolean isSelected,
                boolean hasFocus,
                int row,
                int column) {
 
            TableColumn tb = jTable1.getColumn("Image");
            tb.setMaxWidth(60);
            tb.setMinWidth(60);
 
            jTable1.setRowHeight(60);
 
            return (Component) value;
        }
 
    }
 
    private void webcam_captureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_webcam_captureActionPerformed
        /*Thread webcam;
        webcam = new Thread(){
            public void run(){
                CvCapture capture = opencv_highgui.cvCreateCameraCapture(0);
                opencv_highgui.cvSetCaptureProperty(capture, opencv_highgui.CV_CAP_PROP_FRAME_HEIGHT, 400);
                opencv_highgui.cvSetCaptureProperty(capture, opencv_highgui.CV_CAP_PROP_FRAME_WIDTH, 400);

                IplImage grabbedImage= opencv_highgui.cvQueryFrame(capture);
                ImageIcon icon = new ImageIcon("D://EDU//Programming//Java Database Project//Hotel Management(postgresql)//Image//"+"{468756}"+".jpg");
                CanvasFrame frame = new CanvasFrame("Webcam");
                //lebl.setIcon(icon);
                while(frame.isVisible() && (grabbedImage= opencv_highgui.cvQueryFrame(capture))!=null){
                    frame.showImage(grabbedImage);
                    lebl.setIcon(icon);
                }
            }

        };
        webcam.start();
        */
        Thread web = null;
        web = new Thread(){
            @Override
            public void run(){
                while(true){
                Image image = webcam.getImage();
                lebl.setIcon(new ImageIcon(image));
                
                }
            }
        };
        web.start();
    }//GEN-LAST:event_webcam_captureActionPerformed

    private void jImageShowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jImageShowerActionPerformed
        // TODO add your handling code here:
        String selectedImagePath = "{01684545111}";
        JFileChooser browseImageFile = new JFileChooser("D:\\EDU\\Programming\\Java Database Project\\Hotel Management(postgresql)\\Image");
        //Filter image extensions
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("IMAGES", "png", "jpg", "jpeg");
        browseImageFile.addChoosableFileFilter(fnef);
        int showOpenDialogue = browseImageFile.showOpenDialog(null);
 
        if (showOpenDialogue == JFileChooser.APPROVE_OPTION) {
            File selectedImageFile = browseImageFile.getSelectedFile();
            selectedImagePath = selectedImageFile.getAbsolutePath();
            JOptionPane.showMessageDialog(null, selectedImagePath);
            //Display image on jlable
            name1= name.getText();
            ImageIcon ii = new ImageIcon(selectedImagePath);
//            Resize image to fit jlabel
            Image image = ii.getImage().getScaledInstance(jLabelImage.getWidth(), jLabelImage.getHeight(), Image.SCALE_SMOOTH);
            jLabelImage.setText(name1);
            jLabelImage.setIcon(new ImageIcon(image));
        }
    }//GEN-LAST:event_jImageShowerActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(webcam1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(webcam1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(webcam1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(webcam1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new webcam1().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(webcam1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(webcam1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exit;
    private javax.swing.JButton jImageShower;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelImage;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lebl;
    private javax.swing.JTextField name;
    private javax.swing.JButton ready;
    private javax.swing.JButton takePicture;
    private javax.swing.JButton webcam_capture;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    
}
