/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotel;

import com.github.sarxos.webcam.Webcam;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author rashi
 */
public class editMember extends javax.swing.JFrame {

    Webcam webcam;
    int web1=0;
    
    public editMember() throws SQLException, ClassNotFoundException {
        initComponents();
        statusCheck_prime();
        this.setTitle("Edit Member Page");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        Name = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        Contact = new javax.swing.JLabel();
        contact = new javax.swing.JTextField();
        Address = new javax.swing.JLabel();
        Nationality = new javax.swing.JLabel();
        address = new javax.swing.JTextField();
        nationality = new javax.swing.JTextField();
        passno = new javax.swing.JLabel();
        passportno = new javax.swing.JTextField();
        national = new javax.swing.JLabel();
        nationalid = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        age = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        clear = new javax.swing.JButton();
        updateDB = new javax.swing.JButton();
        checkContact = new javax.swing.JButton();
        roomComboBox = new javax.swing.JComboBox<>();
        clearPartial = new javax.swing.JButton();
        back = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        fathername = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        membersInARoom = new javax.swing.JList<>();
        marital = new javax.swing.JComboBox<>();
        religion = new javax.swing.JComboBox<>();
        purpose = new javax.swing.JComboBox<>();
        occupation = new javax.swing.JComboBox<>();
        openCamera = new javax.swing.JButton();
        takePicture = new javax.swing.JButton();
        ImageInfo = new javax.swing.JLabel();
        imageInfo = new javax.swing.JTextField();
        BookingDate = new javax.swing.JLabel();
        bookingdate = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(85, 85, 85));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel/Image/hotelImage.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 876, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel11)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(124, 206, 150));

        Name.setText("Name");

        Contact.setText("Contact");

        Address.setText("Address");

        Nationality.setText("Nationality");

        passno.setText("Passport No.");

        national.setText("National ID");

        jLabel1.setText("Occupation");

        jLabel2.setText("Age (Number)");

        jLabel3.setText("Marital Status");

        jLabel4.setText("Religion");

        jLabel5.setText("Purpose");

        jLabel9.setText("Room Number (Number)");

        clear.setText("Clear List + Data");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        updateDB.setText("Update");
        updateDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDBActionPerformed(evt);
            }
        });

        checkContact.setText("Check");
        checkContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkContactActionPerformed(evt);
            }
        });

        clearPartial.setText("Clear Data");
        clearPartial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearPartialActionPerformed(evt);
            }
        });

        back.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        jLabel14.setText("Father/Husband Name");

        membersInARoom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                membersInARoomMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(membersInARoom);

        marital.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Marital Status...", "Married", "Unmarried" }));
        marital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maritalActionPerformed(evt);
            }
        });

        religion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Muslim", "Hindu", "Christian", "Buddha", "Other" }));
        religion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                religionActionPerformed(evt);
            }
        });

        purpose.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Purpose...", "Business", "Treatment", "Official", "Exam", "Tour" }));
        purpose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purposeActionPerformed(evt);
            }
        });

        occupation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Occupation...", "Teacher", "Student ", "Player", "Farmer", "Living abroad", "Govt ser", "Private serv", "Bussiness", "Lawer", "Student", "Housewife", "Player ", "Driver", "Other" }));
        occupation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                occupationActionPerformed(evt);
            }
        });

        openCamera.setText("Open Camera");
        openCamera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openCameraActionPerformed(evt);
            }
        });

        takePicture.setText("Take Picture");
        takePicture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                takePictureActionPerformed(evt);
            }
        });

        ImageInfo.setText("Image Info");

        BookingDate.setText("Booking Date");

        bookingdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Contact)
                            .addComponent(Name)
                            .addComponent(Address)
                            .addComponent(passno)
                            .addComponent(national)
                            .addComponent(jLabel1)
                            .addComponent(Nationality)
                            .addComponent(jLabel9)
                            .addComponent(jLabel14)
                            .addComponent(BookingDate)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(back)
                        .addGap(55, 55, 55)
                        .addComponent(updateDB)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(roomComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkContact)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(clearPartial)
                        .addGap(18, 18, 18)
                        .addComponent(clear))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nationality, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(passportno)
                            .addComponent(nationalid, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(occupation, javax.swing.GroupLayout.Alignment.TRAILING, 0, 180, Short.MAX_VALUE)
                            .addComponent(address)
                            .addComponent(name)
                            .addComponent(fathername)
                            .addComponent(contact)
                            .addComponent(bookingdate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(openCamera))
                                .addGap(60, 60, 60)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(takePicture)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(age, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(marital, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(religion, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(purpose, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(ImageInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(imageInfo)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(roomComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(checkContact))
                        .addGap(6, 6, 6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clear)
                            .addComponent(clearPartial))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Name)
                                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Contact)
                            .addComponent(contact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(fathername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Address)
                            .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Nationality)
                            .addComponent(nationality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(marital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(religion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(purpose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(openCamera)
                            .addComponent(takePicture))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(imageInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ImageInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 34, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passportno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passno))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(national)
                            .addComponent(nationalid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(occupation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BookingDate)
                            .addComponent(bookingdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(back)
                            .addComponent(updateDB))
                        .addGap(35, 35, 35))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jPanel1.setBackground(new java.awt.Color(56, 56, 56));
        jPanel1.setPreferredSize(new java.awt.Dimension(453, 473));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Edit Customer Page");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 657, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void membersInARoomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_membersInARoomMouseClicked
        
        String roomnumber1 =(String) roomComboBox.getSelectedItem();
        String name1 = membersInARoom.getSelectedValue();
        String[] name_id = name1.split(":-:");
        name1 = name_id[0];
        String id1 = name_id[1];
        System.out.println(name1 + "  " + id1);

        try (Connection connection = dbConnection.getConnection()) {
            String ins="SELECT * FROM customer\n" +
            "WHERE \"id\" = '"+id1+"' AND \"Roomnumber\"='"+roomnumber1+"';";
            Statement st = connection.createStatement();
            ResultSet rs = st.executeQuery(ins);
            while(rs.next()){
                name.setText(rs.getString("name"));
                address.setText(rs.getString("address"));
                contact.setText(rs.getString("contact"));
                passportno.setText(rs.getString("passportno"));
                nationalid.setText(rs.getString("nationalid"));
                nationality.setText(rs.getString("nationality"));
                age.setText(rs.getString("age"));
                marital.setSelectedItem(rs.getString("marital"));
                religion.setSelectedItem(rs.getString("religion"));
                purpose.setSelectedItem(rs.getString("purpose"));
                occupation.setSelectedItem(rs.getString("occupation"));
                fathername.setText(rs.getString("fathername"));
                bookingdate.setText(rs.getString("bookingdate"));
                String photoname = rs.getString("ImageInfo");
                jLabel10.setIcon(new ImageIcon("Image//"+photoname+".jpg"));
            }
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(admin_choice.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_membersInARoomMouseClicked

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        name.setText("");
        address.setText("");
        contact.setText("");
        passportno.setText("");
        nationalid.setText("");
        nationality.setText("");
        age.setText("");
        marital.setSelectedItem("Select Marital Status...");
        religion.setSelectedItem("Muslim");
        purpose.setSelectedItem("Select Purpose...");
        occupation.setSelectedItem("Select Occupation...");
        fathername.setText("");
        try {
            roomComboBox.removeAllItems();
            statusCheck_prime();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(CheckOut.class.getName()).log(Level.SEVERE, null, ex);
        }
        membersInARoom.setListData(new String[0]);
    }//GEN-LAST:event_clearActionPerformed
    public void statusCheck_prime() throws SQLException, ClassNotFoundException{
        try (Connection connection = dbConnection.getConnection()) {
            Statement st = connection.createStatement();
            String ins = "SELECT * FROM Room\n"+
                    "WHERE \"Status\"= '1'"
                    + "order by roomnumber asc;";
            ResultSet rs = st.executeQuery(ins);
            while(rs.next()){
                roomComboBox.addItem(rs.getString("RoomNumber"));
            }
        }
    }
    private void updateDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDBActionPerformed
        try (Connection connection = dbConnection.getConnection()) {
            String roomnumber1 =(String) roomComboBox.getSelectedItem();
            

            Statement st=connection.createStatement();
            String name1 = name.getText();
            String address1 = address.getText();
            String contact1 = contact.getText();
            String passportno1 = passportno.getText();
            String nationalid1 = nationalid.getText();
            String nationality1 = nationality.getText();
            String age1 = age.getText();
            String marital1 = marital.getSelectedItem().toString();
            String occupation1 = occupation.getSelectedItem().toString();
            String purpose1 = purpose.getSelectedItem().toString();
            String religion1 = religion.getSelectedItem().toString();
            String fathername1 = fathername.getText();
            
            String prename=membersInARoom.getSelectedValue();
            
            String[] name_id = prename.split(":-:");
            String nameid1 = name_id[0];
            String id1 = name_id[1];
            System.out.println(nameid1 + "  " + id1);
            
            String ins="UPDATE customer\n" +
            "SET \"name\"='"+name1+"', \"address\" ='"+address1+"', \"contact\" ='"+contact1+"', \"passportno\" ='"+passportno1+"', \"nationalid\" ='"+nationalid1+"', \"nationality\" ='"+nationality1+"', \"age\" ='"+age1+"', \"marital\" ='"+marital1+"', \"occupation\" ='"+occupation1+"', \"purpose\" ='"+purpose1+"', \"religion\" ='"+religion1+"', \"fathername\" ='"+fathername1+"' \n" +
            "WHERE \"name\" = '"+nameid1+"' AND \"RoomNumber\"='"+roomnumber1+"' AND \"id\" = '"+id1+"';";
            
            String ins1="UPDATE RoomAvailable\n" +
            "SET \"name\"='"+name1+"', \"contact\" ='"+contact1+"'\n" +
            "WHERE \"name\" = '"+nameid1+"' AND \"RoomNumber\"='"+roomnumber1+"';";
            
            st.executeUpdate(ins);
            st.executeUpdate(ins1);

            roomComboBox.removeAllItems();
            statusCheck_prime();
            //preparedStmt = connection.prepareStatement(ins);
            /*preparedStmt.setString (1, name1);
            preparedStmt.setString (2, contact1);
            preparedStmt.setString (3, address1);
            preparedStmt.setString (4, nationality1);
            preparedStmt.setString (5, passportno1);
            preparedStmt.setString (6, nationalid1);
            preparedStmt.setString (7, occupation1);
            preparedStmt.setString (8, age1);
            preparedStmt.setString (9, marital1);
            preparedStmt.setString (10, religion1);
            preparedStmt.setString (11, purpose1);
            preparedStmt.setString (12, bookingdate1);
            preparedStmt.setString (13, bookingtime1);
            preparedStmt.setString (14, roomnumber1);
            preparedStmt.execute();
            */
            //ResultSet resultSet = preparedStmt.executeQuery();
            JOptionPane.showMessageDialog(this, "Information Added to Database");
            clearActionPerformed(evt);
        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Error Inserting in Database");
        }

    }//GEN-LAST:event_updateDBActionPerformed

    private void checkContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkContactActionPerformed
        String roomnumber1 =(String) roomComboBox.getSelectedItem();
        try (Connection connection = dbConnection.getConnection()) {
            
            String ins1="SELECT name, contact FROM RoomAvailable\n" +
            "WHERE \"Roomnumber\" = "+roomnumber1+";";
            PreparedStatement ps1 = connection.prepareStatement(ins1);
            ResultSet rs1 = ps1.executeQuery();

            /*ins="SELECT DISTINCT name FROM customer\n" +
            "WHERE \"name\" = '"+data1+"' AND \"Roomnumber\" = "+roomnumber1+";";
            PreparedStatement ps = connection.prepareStatement(ins);
            //st.executeQuery(ins);
            ResultSet rs = ps.executeQuery();*/
            DefaultListModel listModel1 = new DefaultListModel();
            while(rs1.next()){
                String data= rs1.getString("name");
                String contact = rs1.getString("contact");
                String id = getID(data,roomnumber1,contact);
                listModel1.addElement(data + ":-:" + id);
                //System.out.println(data);
            }
            membersInARoom.setModel(listModel1);

        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(admin_choice.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_checkContactActionPerformed

    public String getID(String name, String roomnumber, String contact){
        String id = null;
        try (Connection connection = dbConnection.getConnection()) {
            String ins="SELECT id FROM customer\n" +
            "WHERE \"Name\" = '"+name+"' AND \"Roomnumber\"='"+roomnumber+"' AND \"contact\"='"+contact+"';";
            PreparedStatement ps = connection.prepareStatement(ins);
            ResultSet rs = ps.executeQuery();
            id = rs.getString("id");
        }
        catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(admin_choice.class.getName()).log(Level.SEVERE, null, ex);
        }
        return id;
    }
    
    private void clearPartialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearPartialActionPerformed
        name.setText("");
        address.setText("");
        contact.setText("");
        passportno.setText("");
        nationalid.setText("");
        nationality.setText("");
        age.setText("");
        marital.setSelectedItem("Select Marital Status...");
        religion.setSelectedItem("Muslim");
        purpose.setSelectedItem("Select Purpose...");
        occupation.setSelectedItem("Select Occupation...");
        fathername.setText("");
    }//GEN-LAST:event_clearPartialActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        new selectionPage().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backActionPerformed

    private void maritalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maritalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maritalActionPerformed

    private void religionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_religionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_religionActionPerformed

    private void purposeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purposeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_purposeActionPerformed

    private void occupationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_occupationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_occupationActionPerformed

    private void openCameraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openCameraActionPerformed

        /*
        Thread webcam;
        webcam = new Thread(){
            @Override
            public void run(){
                opencv_highgui.CvCapture capture = opencv_highgui.cvCreateCameraCapture(0);
                opencv_highgui.cvSetCaptureProperty(capture, opencv_highgui.CV_CAP_PROP_FRAME_HEIGHT, 400);
                opencv_highgui.cvSetCaptureProperty(capture, opencv_highgui.CV_CAP_PROP_FRAME_WIDTH, 400);

                opencv_core.IplImage grabbedImage= opencv_highgui.cvQueryFrame(capture);
                CanvasFrame frame = new CanvasFrame("Webcam");
                while(frame.isVisible() && (grabbedImage= opencv_highgui.cvQueryFrame(capture))!=null){
                    frame.showImage(grabbedImage);
                }
            }
        };
        webcam.start();
        */
        openCam();
    }//GEN-LAST:event_openCameraActionPerformed
    public void openCam(){
        webcam = Webcam.getDefault();
        //webcam.setViewSize(new Dimension(176,144));
        webcam.open();
        boolean exit;
        Thread web = new Thread(){
            boolean ex= false;
            @Override
            public void run(){
                while(!ex){
                Image image = webcam.getImage();
                jLabel10.setIcon(new ImageIcon(image));
                }
            }
        };
        web1=1;
        web.start();
        
    }
    private void takePictureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_takePictureActionPerformed
        try (Connection connection = dbConnection.getConnection()) {
            String name_image;
            BufferedImage img=webcam.getImage();
            if(img!=null){
                Statement st=connection.createStatement();
                name_image=name.getText()+bookingdate.getText();
                imageInfo.setText(name_image);
                File output = new File("Image//"+name_image+".jpg");
                ImageIO.write(img, "JPG", output);
                String prename=membersInARoom.getSelectedValue();
                
                String[] name_id = prename.split(":-:");
                String nameid1 = name_id[0];
                String id1 = name_id[1];
                System.out.println(nameid1 + "  " + id1);

                String ins ="UPDATE customer\n"+
                "SET \"ImageInfo\"='"+imageInfo.getText()+"'\n"+
                "WHERE \"name\" = '"+nameid1+"' AND \"id\" = '"+id1+"';";
                st.executeUpdate(ins);
                webcam.close();
                JOptionPane.showMessageDialog(this, "Image Saved");
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error! Image not Captured");
        }
    }//GEN-LAST:event_takePictureActionPerformed

    private void bookingdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookingdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(editMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(editMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(editMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(editMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new editMember().setVisible(true);
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(editMember.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Address;
    private javax.swing.JLabel BookingDate;
    private javax.swing.JLabel Contact;
    private javax.swing.JLabel ImageInfo;
    private javax.swing.JLabel Name;
    private javax.swing.JLabel Nationality;
    private javax.swing.JTextField address;
    private javax.swing.JTextField age;
    private javax.swing.JButton back;
    private javax.swing.JTextField bookingdate;
    private javax.swing.JButton checkContact;
    private javax.swing.JButton clear;
    private javax.swing.JButton clearPartial;
    private javax.swing.JTextField contact;
    private javax.swing.JTextField fathername;
    private javax.swing.JTextField imageInfo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> marital;
    private javax.swing.JList<String> membersInARoom;
    private javax.swing.JTextField name;
    private javax.swing.JLabel national;
    private javax.swing.JTextField nationalid;
    private javax.swing.JTextField nationality;
    private javax.swing.JComboBox<String> occupation;
    private javax.swing.JButton openCamera;
    private javax.swing.JLabel passno;
    private javax.swing.JTextField passportno;
    private javax.swing.JComboBox<String> purpose;
    private javax.swing.JComboBox<String> religion;
    private javax.swing.JComboBox<String> roomComboBox;
    private javax.swing.JButton takePicture;
    private javax.swing.JButton updateDB;
    // End of variables declaration//GEN-END:variables
}
